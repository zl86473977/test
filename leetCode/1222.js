// https://leetcode.cn/problems/queens-that-can-attack-the-king/?envType=daily-question&envId=2023-09-14
// --可以攻击国王的皇后是--
// 在一个 8x8 的棋盘上，放置着若干「黑皇后」和一个「白国王」。
// 给定一个由整数坐标组成的数组 queens ，表示黑皇后的位置；以及一对坐标 king ，表示白国王的位置，返回所有可以攻击国王的皇后的坐标(任意顺序)。

// 输入：queens = [[0,1],[1,0],[4,0],[0,4],[3,3],[2,4]], king = [0,0]
// 输出：[[0,1],[1,0],[3,3]]
// 解释： 
// [0,1] 的皇后可以攻击到国王，因为他们在同一行上。 
// [1,0] 的皇后可以攻击到国王，因为他们在同一列上。 
// [3,3] 的皇后可以攻击到国王，因为他们在同一条对角线上。 
// [0,4] 的皇后无法攻击到国王，因为她被位于 [0,1] 的皇后挡住了。 
// [4,0] 的皇后无法攻击到国王，因为她被位于 [1,0] 的皇后挡住了。 
// [2,4] 的皇后无法攻击到国王，因为她和国王不在同一行/列/对角线上。

// 输入：queens = [[0,0],[1,1],[2,2],[3,4],[3,5],[4,4],[4,5]], king = [3,3]
// 输出：[[2,2],[3,4],[4,4]]

// 输入：queens = [[5,6],[7,7],[2,1],[0,7],[1,6],[5,1],[3,7],[0,3],[4,0],[1,2],[6,3],[5,0],[0,4],[2,2],[1,1],[6,4],[5,4],[0,0],[2,6],[4,5],[5,2],[1,4],[7,5],[2,3],[0,5],[4,2],[1,0],[2,7],[0,1],[4,6],[6,1],[0,6],[4,3],[1,7]], king = [3,4]
// [[2,3],[1,4],[1,6],[3,7],[4,3],[5,4],[4,5]]

// 1 <= queens.length <= 63
// queens[i].length == 2
// 0 <= queens[i][j] < 8
// king.length == 2
// 0 <= king[0], king[1] < 8
// 一个棋盘格上最多只能放置一枚棋子。
const dir = [
	[-1, 0], // 上
	[-1, 1], // 右上
	[0, 1], // 右
	[1, 1], // 右下
	[1, 0], // 下
	[1, -1], // 左下
	[0, -1], // 左
	[-1, -1], // 左上
];
var queensAttacktheKing = function(queens, king) {
	const isQueen = new Array(8).fill(null).map(() => new Array(8).fill(false));
	for (const [x, y] of queens) {
		isQueen[x][y] = true;
	}
	const result = [];
	for (let i = 0; i < dir.length; i++) {
		let temp = [king[0] + dir[i][0], king[1] + dir[i][1]];
		let num = 0; // 这个方向上命中次数
		// 只要没到达边缘就一直往那个方向查询
		while (
			temp[0] < 8 && // 下边距
			temp[0] >= 0 && // 上边距
			temp[1] >= 0 && // 左边距
			temp[1] < 8 // 右边距
		) {
			if(isQueen[temp[0]][temp[1]]) {
				result.push(temp);
				console.log('---result---', result);
				break;
			}
			temp = [temp[0] + dir[i][0], temp[1] + dir[i][1]];
		}
	}
	console.log('---result---', result);
	return result;
};

// queensAttacktheKing([[0,1],[1,0],[4,0],[0,4],[3,3],[2,4]], [0,0])
// queensAttacktheKing([[0,0],[1,1],[2,2],[3,4],[3,5],[4,4],[4,5]], [3,3])
queensAttacktheKing([[5,6],[7,7],[2,1],[0,7],[1,6],[5,1],[3,7],[0,3],[4,0],[1,2],[6,3],[5,0],[0,4],[2,2],[1,1],[6,4],[5,4],[0,0],[2,6],[4,5],[5,2],[1,4],[7,5],[2,3],[0,5],[4,2],[1,0],[2,7],[0,1],[4,6],[6,1],[0,6],[4,3],[1,7]], [3,4])
